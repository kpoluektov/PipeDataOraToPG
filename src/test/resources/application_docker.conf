ora {
    url = "jdbc:oracle:thin:@host.docker.internal:1521:xe"
    driver =  oracle.jdbc.OracleDriver
    user="pol"
    password="pol"
}
# slick style connection description https://scala-slick.org/doc/3.3.1/database.html
pg {
    url = "jdbc:postgresql://host.docker.internal:5432/"
    driver = "org.postgresql.Driver"
    user = "postgres"
    password = "postgres"
    numThreads = 8
    maxConnections = 8
    minConnections = 2
    queueSize = 5000
}

numThreads = 2      # number of SourceTask threads ( number of tables to piping in parallel )
checklob = true     # consider lob_size in avg_row_len calculation !!! DBA_SEGMENTS must be granted !!!
fetchsize = 500000  # expected chunk size  in bytes
oraOwner = "POL"    # table's to scan owner
pgSchema = "TEST"    # table's sink schema
oramask = ".*"      # table's to scan mask. Use regexp pattern

POL."POL_TEST_OBJECTS"{         #any condition to filter data pipe
 condition = "rownum <= 11"
}

